{"ast":null,"code":"var _jsxFileName = \"/Users/kelly.he/Documents/kellyhe-site/src/components/BlogPosts/BlogPostTemplate.js\";\nimport React from \"react\";\nimport Navbar from \"../navmenu/Navbar\";\nimport Contact from \"../Contact\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, Avatar, Grid, Box, Divider } from \"@material-ui/core\";\nimport backgroundImg from \"../../img/animal.jpg\";\n\nconst styles = theme => ({\n  contentArea: {\n    // display: \"flex\",\n    // flexDirection: \"column\",\n    // justifyContent: \"center\",\n    // textAlign: \"center\",\n    width: \"70%\",\n    // zIndex: 1, // specifies stack order\n    // border: \"2px white solid\",\n    // borderBottom: `3px ${theme.palette.primary.light} solid`,\n    margin: \"auto\"\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"500px\",\n    padding: \"2rem\",\n    margin: \"0 0 1rem 0\",\n    justifyContent: \"flex-end\"\n  }\n});\n\nconst BlogPostTemplate = props => {\n  const {\n    classes\n  } = props;\n  const theme = useTheme();\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.contentArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.header,\n    style: {\n      background: `url(${props.image}) repeat center center`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.subtitle)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      color: theme.palette.primary.light,\n      lineHeight: \"1.5rem\",\n      padding: \"0 0 .5rem 0\",\n      borderBottom: `1px ${theme.palette.primary.light} solid`,\n      margin: \"0 0 1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, props.date), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      lineHeight: \"3rem\",\n      margin: \"0 0 1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"paragraph title\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      lineHeight: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"I decided I wanted to make a website to try out web development more. I debated long and hard about what type of site to build, and I finally decided to make a personal portfolio and blog. After I started development, I realized I wanted to have pictures for the blog and other parts of the site. Not planning on writing the blogs right then and there, I obviously needed to get mock/filler pictures. Do I get random pictures? Do I get pictures of myself? Do I google images? What term would I google? It's pretty hard to find \\\"random\\\" pictures when you have to think about how to acquire a random picture. It felt weird using selfies because then I'd have to stare at my face for hours while making the site. Torn about what to do, I started scrolling through my camera roll and I came across my cat album.\"));\n};\n\nexport default withStyles(styles)(BlogPostTemplate);","map":{"version":3,"sources":["/Users/kelly.he/Documents/kellyhe-site/src/components/BlogPosts/BlogPostTemplate.js"],"names":["React","Navbar","Contact","useTheme","withStyles","Typography","Avatar","Grid","Box","Divider","backgroundImg","styles","theme","contentArea","width","margin","header","display","flexDirection","minHeight","padding","justifyContent","BlogPostTemplate","props","classes","background","image","title","subtitle","color","palette","primary","light","lineHeight","borderBottom","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,GAAnC,EAAwCC,OAAxC,QAAuD,mBAAvD;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,WAAW,EAAE;AACX;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE,KALI;AAOX;AACA;AACA;AACAC,IAAAA,MAAM,EAAE;AAVG,GADY;AAazBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,aAAa,EAAE,QAFT;AAGNC,IAAAA,SAAS,EAAE,OAHL;AAINC,IAAAA,OAAO,EAAE,MAJH;AAKNL,IAAAA,MAAM,EAAE,YALF;AAMNM,IAAAA,cAAc,EAAE;AANV;AAbiB,CAAZ,CAAf;;AAuBA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAMX,KAAK,GAAGT,QAAQ,EAAtB;AAEA,sBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEqB,OAAO,CAACX,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,SAAS,EAAEW,OAAO,CAACR,MADrB;AAEE,IAAA,KAAK,EAAE;AAAES,MAAAA,UAAU,EAAG,OAAMF,KAAK,CAACG,KAAM;AAAjC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BH,KAAK,CAACI,KAAhC,CAJF,eAKE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BJ,KAAK,CAACK,QAAhC,CALF,CADF,eASE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEjB,KAAK,CAACkB,OAAN,CAAcC,OAAd,CAAsBC,KADxB;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLb,MAAAA,OAAO,EAAE,aAHJ;AAILc,MAAAA,YAAY,EAAG,OAAMtB,KAAK,CAACkB,OAAN,CAAcC,OAAd,CAAsBC,KAAM,QAJ5C;AAKLjB,MAAAA,MAAM,EAAE;AALH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGQ,KAAK,CAACY,IAVT,CATF,eAsBE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,KAAK,EAAE;AAAEF,MAAAA,UAAU,EAAE,MAAd;AAAsBlB,MAAAA,MAAM,EAAE;AAA9B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAtBF,eA4BE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAE;AAAEkB,MAAAA,UAAU,EAAE;AAAd,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,izBA5BF,CADF;AA6CD,CAjDD;;AAmDA,eAAe7B,UAAU,CAACO,MAAD,CAAV,CAAmBW,gBAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport Navbar from \"../navmenu/Navbar\";\nimport Contact from \"../Contact\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, Avatar, Grid, Box, Divider } from \"@material-ui/core\";\nimport backgroundImg from \"../../img/animal.jpg\";\n\nconst styles = (theme) => ({\n  contentArea: {\n    // display: \"flex\",\n    // flexDirection: \"column\",\n    // justifyContent: \"center\",\n    // textAlign: \"center\",\n    width: \"70%\",\n\n    // zIndex: 1, // specifies stack order\n    // border: \"2px white solid\",\n    // borderBottom: `3px ${theme.palette.primary.light} solid`,\n    margin: \"auto\",\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"500px\",\n    padding: \"2rem\",\n    margin: \"0 0 1rem 0\",\n    justifyContent: \"flex-end\",\n  },\n});\n\nconst BlogPostTemplate = (props) => {\n  const { classes } = props;\n  const theme = useTheme();\n\n  return (\n    <Box className={classes.contentArea}>\n      <Box\n        className={classes.header}\n        style={{ background: `url(${props.image}) repeat center center` }}\n      >\n        <Typography variant=\"h2\">{props.title}</Typography>\n        <Typography variant=\"h5\">{props.subtitle}</Typography>\n      </Box>\n\n      <Typography\n        variant=\"body1\"\n        style={{\n          color: theme.palette.primary.light,\n          lineHeight: \"1.5rem\",\n          padding: \"0 0 .5rem 0\",\n          borderBottom: `1px ${theme.palette.primary.light} solid`,\n          margin: \"0 0 1rem 0\",\n        }}\n      >\n        {props.date}\n      </Typography>\n\n      <Typography\n        variant=\"h5\"\n        style={{ lineHeight: \"3rem\", margin: \"0 0 1rem 0\" }}\n      >\n        paragraph title\n      </Typography>\n      <Typography variant=\"body1\" style={{ lineHeight: \"2rem\" }}>\n        I decided I wanted to make a website to try out web development more. I\n        debated long and hard about what type of site to build, and I finally\n        decided to make a personal portfolio and blog. After I started\n        development, I realized I wanted to have pictures for the blog and other\n        parts of the site. Not planning on writing the blogs right then and\n        there, I obviously needed to get mock/filler pictures. Do I get random\n        pictures? Do I get pictures of myself? Do I google images? What term\n        would I google? It's pretty hard to find \"random\" pictures when you have\n        to think about how to acquire a random picture. It felt weird using\n        selfies because then I'd have to stare at my face for hours while making\n        the site. Torn about what to do, I started scrolling through my camera\n        roll and I came across my cat album.\n      </Typography>\n    </Box>\n  );\n};\n\nexport default withStyles(styles)(BlogPostTemplate);\n"]},"metadata":{},"sourceType":"module"}